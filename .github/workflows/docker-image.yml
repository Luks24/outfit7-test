

name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ main ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: flask-app
      PROJECT_ID: outfit7-362408
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
          credentials_json: '${{ secrets.REGISTRY_SERVICE_KEY }}'
          
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
          
    - name: Build and push Docker
      run: |
          cd flask-app
          docker build -t europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:latest -t europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:${{github.sha}} .
          docker image push europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:latest
          docker image push europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:${{github.sha}}
      shell: bash
##################################################################
  terraform:
    needs: build-push-gcr
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./provision-infrastructure

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
          credentials_json: '${{ secrets.GCP_SERVICE_KEY }}'

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
        working-directory: ./provision-infrastructure

      - name: Terraform Apply
        uses: dflook/terraform-apply@v1
        with:
          path: "./provision-infrastructure"
          auto_approve: true