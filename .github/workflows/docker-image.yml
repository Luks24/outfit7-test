

name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ main ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: flask-app
      PROJECT_ID: outfit7-362408
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
          credentials_json: '${{ secrets.REGISTRY_SERVICE_KEY }}'
          
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
          
    - name: Build and push Docker
      run: |
          cd flask-app
          docker build -t europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:latest -t europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:${{github.sha}} .
          docker image push europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:latest
          docker image push europe-west3-docker.pkg.dev/outfit7-362408/docker-test-repository/flask-app:${{github.sha}}
      shell: bash

  terraform:
    needs: build-push-gcr
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./provision-infrastructure

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_KEY }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_KEY }}